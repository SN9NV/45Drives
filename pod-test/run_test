#! /bin/bash

# Usage:
	# ./run_test [-a] [-tvzh] 
	# ./run_test [-c hba] [-s bays] [-r raid level] [-l layout] [-b blocksize] [-n block count]

# Options:	
	# -a	Run in auto mode. Without -c & -s specifed user input required
	# -b	Specify blocksize for datatest
	# -c	Disk controller
		# - Supported Controllers:
			# - LSI 9201 (i.e LSI,lsi,l)
			# - HighPoint R750 (i.e R750,r750,r)
	# -l	Specify VDEV layout
	# -n	Specify block count for datatest. Total file size = BLOCKSIZE * COUNT
	# -r	Specify RAID level
	# -s	Specify number of physical bays
	# -t	Monitor drive temperatures during test
	# -z 	Disable ZFS tunes
	# -h	Show this summary 
	
usage() {
        cat << EOF
Usage:
	./run_test [-a] [-tvzh] 
	./run_test [-c hba] [-s bays] [-r raid level] [-l layout] [-b blocksize] [-n block count]

	-a	Run in auto mode. Without -c & -s specifed user input required
	-b	Specify blocksize for datatest
	-c	Disk controller
		- Supported Controllers:
			- LSI 9201 (i.e LSI,lsi,l)
			- HighPoint R750 (i.e R750,r750,r)
	-l	Specify VDEV layout
	-n	Specify block count for datatest. Total file size = BLOCKSIZE * COUNT
	-r	Specify RAID level
	-s	Specify number of physical bays
	-t	Monitor drive temperatures during test
	-z 	Disable ZFS tunes
	-h	Show this summary 

EOF
        exit 0
}
map(){ # Configures physical drive bay map
# the first input argument is the DISK_CONTROLLER
# The second input argument is the CHASSIS size
# calling alias with no input will prompt for user input.

	sh /setup/dmap.sh $1 $2
	mate-terminal --geometry=36x25 -e "watch -n 1 --color sh /setup/lsdev.sh"
	echo
}
temperature(){ # Lauch Drive Temperature Monitor
	if [ $TEMP_MODE == yes ];then
		mate-terminal --geometry=36x25 -e "watch -n 60 --color sh /setup/lstemp.sh"
	fi
}
vdev(){ # Launch VDEV map
	if [ $VDEV_MODE == yes ];then
		mate-terminal --geometry=36x25 -e "watch -n 1 --color sh /setup/lsvdev.sh"
	fi
}
datatest(){ #Launch Datatest. Writes & then Reads 5x 500GB File @ 1MB blocksize
	mate-terminal --geometry=50x10 -e "watch -n 1 ls -lh /zpool/"
	sh /root/Desktop/pod-test/datatest.sh $1 $2
}
cleanup(){ #Destroy pool and wipe drives
	echo -e "\nAll Done\nCleaning Up....."
	zpool destroy zpool
	sh /setup/wipe.sh
}
check(){ # Verify inputs
	if [ "$CHASSIS" -eq 30 ] || [ "$CHASSIS" -eq 45 ] || [ "$CHASSIS" -eq 60 ];then
		:
	else
		echo "Unsupported Chassis Size"
		exit 0
	fi
}
pause(){ # Waits for user input to continue
read -p "Press Enter to continue" con
case $con in
*)
	;;
esac
}

AUTO_MODE=yes
DISK_CONTROLLER=
VDEV_LAYOUT=IO
RAID_LEVEL=raidz1
CHASSIS=
TEMP_MODE=no
BLOCK_SIZE=1M
COUNT=10000
TUNE=yes

while getopts 'ab:c:l:n:r:s:tvzh' OPTION; do
	case ${OPTION} in
	a)
		AUTO_MODE=yes
		;;
	b)
		BLOCK_SIZE=${OPTARG}
		;;
	c)
		DISK_CONTROLLER=${OPTARG}
		;;
	l)
		LAYOUT=${OPTARG}
		;;
	n)
		COUNT=${OPTARG}
		;;
	r)
		RAID_LEVEL=${OPTARG}
		;;
	s)
		CHASSIS=${OPTARG}
		;;
	t)
		TEMP_MODE=yes
		;;
	v)
		VDEV_MODE=yes
		;;
	z)
		TUNE=
		;;
	h)
		usage
		;;
	esac
done
if [ $# = 0 ];then
	usage
fi

if [ $AUTO_MODE == yes ];then
	if [ -z $DISK_CONTROLLER ] || [ -z $CHASSIS ];then
		read -p "Enter Disk Controller: " DISK_CONTROLLER
		read -p "Enter Number of physical bays: " CHASSIS
	fi
	check $CHASSIS
	map $DISK_CONTROLLER $CHASSIS
	temperature
	if [ -z $TUNE ];then
		./zpool -s $CHASSIS -r $RAID_LEVEL -l $VDEV_LAYOUT
	else
		./zpool -s $CHASSIS -r $RAID_LEVEL -l $VDEV_LAYOUT -t
	fi
	vdev
	datatest $BLOCK_SIZE $COUNT
	cleanup
fi
