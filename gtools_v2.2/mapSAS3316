#!/bin/bash
# ---------------------------------------------------------------------------
# mapSAS3224 - Used by dmap to generate LSI HBA models using SAS chipset 3316 alias config

# Copyright 2016, Brett Kelly <bkelly@45drives.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

CHASSIS=$1
DISK_CONTROLLER=$2
OLD_MAP=$3

usage(){
	cat << EOF
Usage: mapSAS3316 CHASSIS CONTROLLER_ID

EOF
	exit 0

}
read_card(){
	CARD=$1
	CARD_ID=$2
	PORT=1
	slot=1

	while [ $slot -lt 16 ];do
		echo "alias $CARD-$slot     /dev/disk/by-path/pci-0000:$CARD_ID-scsi-0:0:$(expr $slot + 15):0" >> /etc/zfs/vdev_id.conf
		let slot=slot+1
	done
	if [ $OLD_MAP == no ];then
		trimconf 1
	fi
}
trimconf(){
	TRIM=$1
	echo "$(head -n -$TRIM /etc/zfs/vdev_id.tmp)" > /etc/zfs/vdev_id.tmp
}

if [ $# = 0 ];then
	usage
fi

if [ -e /etc/zfs/vdev_id.conf ];then
        rm -f /etc/zfs/vdev_id.conf
fi

PORT_COUNT=4
DRIVE_COUNT=4

echo "# by-vdev" >> /etc/zfs/vdev_id.conf
echo "# name     fully qualified or base name of device link" >> /etc/zfs/vdev_id.conf
case $CHASSIS in
15)
	CARD1=$(lspci | grep $DISK_CONTROLLER | awk 'NR==1{print $1}')
	read_card 1 $CARD1
	if [ $OLD_MAP == yes ];then
		trimconf 1
	fi
	;;
30)
	CARD1=$(lspci | grep $DISK_CONTROLLER | awk 'NR==1{print $1}')
	CARD2=$(lspci | grep $DISK_CONTROLLER | awk 'NR==2{print $1}')
	read_card 1 $CARD1
	read_card 2 $CARD2
	if [ $OLD_MAP == yes ];then
		trimconf 2
	fi
	;;
45)
	CARD1=$(lspci | grep $DISK_CONTROLLER | awk 'NR==1{print $1}')
	CARD2=$(lspci | grep $DISK_CONTROLLER | awk 'NR==2{print $1}')
	CARD3=$(lspci | grep $DISK_CONTROLLER | awk 'NR==3{print $1}')
	read_card 1 $CARD1
	read_card 2 $CARD2
	read_card 3 $CARD3
	if [ $OLD_MAP == yes ];then
		trimconf 3 conf
	fi
	;;
60)
	CARD1=$(lspci | grep $DISK_CONTROLLER | awk 'NR==1{print $1}')
	CARD2=$(lspci | grep $DISK_CONTROLLER | awk 'NR==2{print $1}')
	CARD3=$(lspci | grep $DISK_CONTROLLER | awk 'NR==3{print $1}')
	CARD4=$(lspci | grep $DISK_CONTROLLER | awk 'NR==4{print $1}')
	read_card 1 $CARD1
	read_card 2 $CARD2
	read_card 3 $CARD3
	read_card 4 $CARD4
	if [ $OLD_MAP == yes ];then
		trimconf 4 conf
	fi
	;;
esac
cat /etc/zfs/vdev_id.tmp >> /etc/zfs/vdev_id.conf
rm -f /etc/zfs/vdev_id.tmp
